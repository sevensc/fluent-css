@import 'variables/colornames';
@import 'variables/directions';
$count: 5;
$units: (px);
$borderstyles: 
(
    dotted, // Defines a dotted border
    dashed, // Defines a dashed border
    solid,  // Defines a solid border
    double, // Defines a double border
    groove, // Defines a 3D grooved border. The effect depends on the border-color value
    ridge, // Defines a 3D ridged border. The effect depends on the border-color value
    inset, // Defines a 3D inset border. The effect depends on the border-color value
    outset, // Defines a 3D outset border. The effect depends on the border-color value
);

// without directions
@for $i from 1 through $count {
    @each $style in $borderstyles { //top, left ..
            @each $unit in $units { // px
                .border-#{$i} {  // border-left-solid-1-green
                    border: $i#{$unit};
                }   

                @each $color in $colornames { // red, green, blue...

                    .border-#{$i}-#{$color} {  // border-left-solid-1-green
                        border: $i#{$unit} $color;
                    }
    
                    .border-#{$style}-#{$i}-#{$color} {  // border-left-solid-1-green
                        border: $style $i#{$unit} $color;
                    }                
                }            
            
        
                // with directions
                @each $direction in $directions { //top, left ...  
                    .border-#{$direction}-#{$i} {  // border-left-solid-1-green
                        border-#{$direction}: $i#{$unit};
                    }

                    @each $color in $colornames { // red, green, blue...    
                        .border-#{$direction}-#{$i}-#{$color} {  // border-left-solid-1-green
                            border-#{$direction}: $i#{$unit} $color;
                        }   
                        
                        .border-#{$direction}-#{$style}-#{$i}-#{$color} {  // border-left-solid-1-green
                            border-#{$direction}: $style $i#{$unit} $color;                        
                        }
                    }
                }
        }
    }
}

$visibilities: (none, hidden);
@each $visibility in $visibilities { 
    .border-#{$visibility} {  // border-left-none, border-left-hidden
        border: $visibility;
    } 

    @each $direction in $directions { 
        .border-#{$direction}-#{$visibility} {  // border-left-none, border-left-hidden
            border-#{$direction}: $visibility;
        }  
    }  
}